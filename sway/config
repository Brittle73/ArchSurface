# [(MOSTLY) Default config for sway - custom shit at bottom]
#
# thank you based god
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left a
set $down s
set $up w
set $right d
# Your preferred terminal emulator
#set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#output * bg /home/bbrittle/custom_wallpapers/meteroro.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
#
### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    #bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher (moved below under custom items)
    #bindsym $mod+space exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'you tryna fuck around? why you wanna leave...' -B 'bye bitch' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    #bindsym $mod+$left focus left
    #bindsym $mod+$down focus down
    #bindsym $mod+$up focus up
    #bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    #bindsym $mod+Shift+$left move left
    #bindsym $mod+Shift+$down move down
    #bindsym $mod+Shift+$up move up
    #bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+Shift+s layout stacking
    bindsym $mod+Shift+t layout tabbed
    bindsym $mod+Shift+d layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+f floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+t focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
# 
#   # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

include /etc/sway/config.d/*





#MY SHIT

#[outputs]
output eDP-1 resolution 2736x1824 position 0,0
#output eDP-1 resolution 1920x1080 position 0,0
#output DP-4 mirror eDP-1
#output DP-4 scale 2
#output DP-4 pos 2737 0 res 3840x1080
#output DP-3 resolution 1920x1080@60.000Hz position 2737,0
#output DP-4 resolution 3840x1080 position 1367,0
output DP-4 resolution 1920x1080 position 1367,0
output HEADLESS-1 resolution 1920x1080 position 0,0
set $disp_1 output eDP-1
set $disp_3 output DP-3
set $disp_2 output HDMI-A-1
set $disp_4 output DP-4
set $disp_h HEADLESS-1

#[output toggle?]
bindsym $mod+Mod1+1 exec sway output eDP-1 power toggle
#bindswitch --reload $mod+Backspace+1 output $disp_1 power toggle
bindsym $mod+Mod1+4 exec sway output DP-4 power toggle
#bindswitch --reload --locked $mod+Backspace+3 output $disp_3 power toggle
bindsym $mod+Mod1+3 exec sway output DP-3 power toggle
bindsym $mod+Mod1+2 exec sway output HDMI-A-1 power toggle
bindsym $mod+Mod1+h exec sway output HEADLESS-1 power toggle

#[wayvnc test]
#output HEADLESS-1 resolution 1920x1080 position 0,0

#[clamshell mode: https://github.com/swaywm/sway/wiki]
set $laptop eDP-1
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable

#[terminal]
set $term alacritty

#[nwg-panel (instead of waybar)]
exec_always nwg-panel

#[menu (nwg-drawer)]
#set $menu nwg-drawer
#exec_always nwg-drawer -is 38 -nofs -r -spacing 16
#bindsym $mod+Space exec nwg-drawer
#set $menu tofi-run
#exec_always tofi-run
#bindsym $mod+Space exec tofi-run
set $menu tofi-run | xargs swaymsg exec --
bindsym $mod+Space exec $menu

#nwg-drawer xdg-open alternative (actual file located in ~/.config/nwg-panel/preferred-apps.json)
#{
#  "\\.pdf$": "atril",
#  "\\.svg$": "inkscape",
#  "\\.(jpg|png|tiff|gif)$": "feh",
#  "\\.(mp3|ogg|flac|wav|wma)$": "audacious",
#  "\\.(avi|mp4|mkv|mov|wav)$": "mpv",
#  "\\.(doc|docx|xls|xlsx)$": "libreoffice"
#}

#[nwgbar]
bindsym $mod+asciitilde exec nwg-bar -g Sweet-Dark

#[calendar application]
set $calendar $term_float khal interactive

#[swayidle-effects v1.0]
#exec swayidle -w \
#          timeout 600 'swaylock --clock --indicator --screenshots -effect-scale 0.4 --effect-vignette 0.2:0.5 --effect-blur 32x2 --datestr "%a %m.%e.%Y" --timestr "%I:%M"' \
#          timeout 1800 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock --clock --indicator --screenshots -effect-scale 0.4 --effect-vignette 0.2:0.5 --effect-blur 32x2 --datestr "%a %m.%e.%Y" --timestr "%I:%M"'

#[swaylock/idle/-effects lockscreen test (WIP:theming works great for the manual lock screen bindsym below, but no longer locking on its own now with this...)]
exec swayidle -w \
          timeout 1800 'swaylock --clock --indicator -l --grace 10 --fade-in 2 --submit-on-touch --ignore-empty-password --bs-hl-color d7d7d5 --key-hl-color 0abdc6 --ring-color d300c4 --ring-clear-color 00ff00 --ring-ver-color d300c4 --ring-wrong-color FF0000 --inside-color 000b1e --inside-clear-color 000b1e --inside-ver-color 000b1e --inside-wrong-color f57800 --inside-caps-lock-color d7d7d5 --text-color 0abdc6 --text-clear-color 0abdc6 --text-ver-color 0abdc6 --text-wrong-color d7d7d5 --line-color 123e7c --ring-clear-color 00FF00 --ring-caps-lock-color F57800 --ring-wrong-color FF0000 --screenshots -effect-scale 0.4 --effect-vignette 0.2:0.5 --effect-blur 32x2 --datestr "%a %m.%d.%Y" --timestr  "%I:%M %p"' \
          timeout 4700 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
          before-sleep 'swaylock --clock --indicator -l --grace 10 --fade-in 2 --submit-on-touch --ignore-empty-password --bs-hl-color d7d7d5 --key-hl-color 0abdc6 --ring-color d300c4 --ring-clear-color 00ff00 --ring-ver-color d300c4 --ring-wrong-color FF0000 --inside-color 000b1e --inside-clear-color 000b1e --inside-ver-color 000b1e --inside-wrong-color f57800 --inside-caps-lock-color d7d7d5 --text-color 0abdc6 --text-clear-color 0abdc6 --text-ver-color 0abdc6 --text-wrong-color d7d7d5 --line-color 123e7c --ring-clear-color 00FF00 --ring-caps-lock-color F57800 --ring-wrong-color FF0000 --screenshots -effect-scale 0.4 --effect-vignette 0.2:0.5 --effect-blur 32x2 --datestr "%a %m.%d.%Y" --timestr "%I:%M %p"'

#[swayidle-effects (still WIP, trying to make pause media before locking)]
#exec swayidle -w \
#          timeout 1200 'swaylock -f -c 000000' \
#          timeout 1205 'if pgrep -x swaylock; then swaymsg "output * dpms >
#          before-sleep 'swaylock -f -c 000000'

#[manual lock]
#source: https://code.krister.ee/lock-screen-in-sway/
set $lockman exec bash ~/.config/sway/lockman.sh
bindsym $mod+l exec $lockman

#[no borders on windows, everyone is welcome]
bindsym $mod+Shift+w border toggle

#[border defaults]
#[first exclude fullscreen, single-window Alacritty just because, then apply defaults to rest]
#for_window [app_id=Alacritty] floating enable
#for_window [app_id=Alacritty] resize set width 1400 height 900
#for_window [app_id=Alacritty] hide_edge_borders none
#for_window [app_id=Alacritty] smart_borders off
default_border pixel 0
default_floating_border pixel 0
#hide_edge_borders --i3 smart
#hide_edge_borders smart
#smart_borders on
#smart_gaps on
#titlebar_border_thickness 0
gaps outer 2
gaps inner 6

#[enable tap on touchpad]
input type:touchpad {
	tap enabled
	natural_scroll enabled
}

#[input/mouse sensitivity]
input type:mouse {
	natural_scroll enabled
	dwt enabled
	accel_profile "flat" #disable mouse acceleration (enabled by default; to set it manually, use "adaptive" instead of "flat"
	pointer_accel 0.7 # set mouse sensitivity (between -1 and 1)
}

#[kb/m wake from idle/sleep/hibernation TEST]
#seat seat0 idle_wake keyboard pointer touch
#seat seat0 idle_wake keyboard pointer
#^^^Deprecated

#[touchscreen keeb]
# if no compatible Wayland compositor is running yet \
#cd ~/home/bbrittle/squeekboard/_build/ \
#src/squeekboard

#[backlight]
#brightnessctl
#bindsym XF86MonBrightnessDown exec brightnessctl s 2%-
#bindsym XF86MonBrightnessUp exec brightnessctl s 2%+

#[backlight keys/control]
#light
#bindsym XF86MonBrightnessDown exec light -U 2
#bindsym XF86MonBrightnessUp exec light -A 2

#[louder/quieter]
#bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
#bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
#bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%

#[media player controls]
bindsym XF86AudioPlay exec playerctl play-pause
#bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86Search exec $menu

#[power button shutdown>suspend !!! STILL WIP]
bindsym XF86PowerOff exec systemctl sleep

#[touchscreen toggle]
#bindsym XF86TouchpadToggle input type:touchpad events toggle enabled disabled

#[custom/scratchpad-indicator] 
#Source: https://github.com/Alexays/Waybar/wiki/Module:-Custom
#"custom/scratchpad-indicator": {
#    "interval": 3,
#    "return-type": "json",
#    "exec": "swaymsg -t get_tree | jq --unbuffered --compact-output '(recurse(.nodes[]) | select(.name == \"__i3_scratch\") | .focus) as $scratch_ids | [..  | (.nodes? + .floating_nodes?) // empty | .[] | select(.id |IN($scratch_ids[]))] as $scratch_nodes | if ($scratch_nodes|length) > 0 then { text: \"\\($scratch_nodes | length)\", tooltip: $scratch_nodes | map(\"\\(.app_id // .window_properties.class) (\\(.id)): \\(.name)\") | join(\"\\n\") } else empty end'",
#    "format": "{} 🗗",
#    "on-click": "exec swaymsg 'scratchpad show'",
#    "on-click-right": "exec swaymsg 'move scratchpad'"
#}

#[themes (GTK)]
exec_always {
  gsettings set org.gnome.desktop.interface gtk-theme "Sweet-Dark"
  gsettings set org.gnome.desktop.interface icon-theme "Sweet-Purple-Filled"
  gsettings set org.gnome.desktop.interface cursor-theme "Plasma-Overdose"
  gsettings set org.gnome.desktop.interface cursor-size 16
}

#[mouse icon]
#seat seat0 xcursor_theme Plasma-Overdose 24

#[nm-applet]
exec_always nm-applet --indicator

#[Sway custom wallpaper]
#output * bg /usr/share/backgrounds/mine/meteroro_resized_surface_V2.png fill
#exec ~/.azotebg (Azote was not working for all displays, testing out normal swaybg)
output "*" bg /usr/share/backgrounds/mine/in_use/meteroro_resized_surface_V2.png fill

#[nwg-panel autostart]
exec nwg-panel

#[workspace configuration]

#workspace 10 weird shit
workspace 10
#exec gimp
#exec xournalpp
#exec $term -e authy

#workspace 9 sensitivities
#exec $TERM -e gimp

#workspace 6 output $disp_1 $disp_2 $disp_3
workspace 6
#Attempt at forcing VirtualBox to workspace 6
#assign [class="virtualbox"] 6
#exec virtualbox
#exec swaymsg "workspace 6; exec virtualbox"
#set $vboxtoworkspace exec bash ~/.config/sway/vboxtoworkspace.sh
#exec $vboxtoworkspace
#exec swaymsg "workspace 6; exec virtualbox"
#exec vmplayer

workspace 5
exec evolution

workspace 4
#exec franz
#exec discord
#set $fuckdiscord exec bash ~/.config/sway/fuckdiscord.sh
#exec $fuckdiscord
#exec swaymsg "workspace 4; exec discord"

#workspace 3 $disp_1 $disp_2 $disp_3
workspace 3
exec google-chrome-stable

workspace 2
#exec $term
exec alacritty
#exec sleep 0.3
#exec $term
#exec swaymsg "[con_id=cava] splitv"
exec alacritty
#exec sleep 0.6
#exec $term
#exec swaymsg "move right"
exec alacritty

workspace 1
#exec btop
#exec alacritty 'btop'
#exec '$term; exec btop new'
#exec alacritty -e 'exec btop new'
#exec swaymsg "workspace 1; exec btop"
#set $btopautlaunch exec bash ~/.config/sway/btopautolaunch
#exec $btopautolaunch
exec $term -e btop

#[grim/screenshot hotkey]
bindsym $mod+Alt+Print exec grim - | wl-copy && notify-send "GRIM! (full screenshot) :)"

#[slurp/selected screenshot hotkey]
bindsym $mod+Print exec grim -g "$(slurp)" - | wl-copy && notify-send "SLURP'd! :)"

#[allow popups inside of fullscreen window]
popup_during_fullscreen smart

#[allow mod-key (+right/left mouse click) to resize/move per next item]
floating_modifier Shift normal

#[allow dragging of tiled windows (test)]
tiling_drag enable

#[idle-inhibitor]
#bindsym $mod+i exec sway inhibit_idle visible && notify-send "Sway idle inhibit ENABLED"
#NEW - $mod+i now not only enables inhibit_idle and sends a notification to tell you so, but it also launches a terminal window and turns on dvd-screensaver-sway!
#^^^Next task is to resize the alacritty window to better fit the neofetch output // source https://github.com/alacritty/alacritty/issues/3818
bindsym $mod+i exec sway inhibit_idle visible && notify-send "Sway idle inhibit ENABLED" && exec alacritty -o font.size=10 -e bash -c "neofetch && exec dvd-screensaver-sway"
#
#Attempting with st term emu to avoid w3m compatibility issues with Alacritty
#Notes: more or less works with st -g=180,20 -e bash -c "neofetch && dvd-screensaver-sway, but the background and window sizing is not right, so reverting back for now
#bindsym $mod+i exec sway inhibit_idle visible && notify-send "Sway idle inhibit ENABLED" && exec st -g=100,100 -e bash -c "neofetch && exec dvd-screensaver-sway"
bindsym $mod+Shift+i exec sway inhibit_idle none && notify-send "Sway idle inhibit DISABLED"

#[physical mouse settings]
#  input "wl_pointer" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }

#[allow apps to launch as root (e.g. gparted)]
#polkit-gnome (works)
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
#lxsession was ugly and polkit-dumb-agent-git broke a bunch of shit/didn't work

#[launch file explorer/Thunar hotkey]
bindsym $mod+e exec thunar

#[autostart udiskie for nfs share (WIP)]
#udiskie -2 &

#[attempted cava setup for consistent background synthesizer [WIP]
#below code is just to get started / https://gitlab.com/Milhax/rice/-/blob/main/.config/i3/config
#exec_always --no-startup-id killall cava; exec /home/hack3900/Documents/rice/i3bgwin/i3bgwin urxvt -depth 32 -bg '[00]black' --color6 '[50]cyan' +sb -embed {windowid} -e cava
#exec_always --no-startup-id killall cava; exec /home/bbrittle/custom_wallpapers/meteroro_resized_surface_V2.png urxvt -depth 32 -bg '[00]black' --color6 '[50]cyan' +sb -embed {windowid} -e cava
#exec_always $TERM -v -o window.opacity=0.0 -o decorations=none -o startup.mode=full --config-file:/home/bbrittle/.config/alacritty/cava.alacritty.yml --embed {windowid} -e cava

#[For URXVT/Alacritty-Cava thing above - attempting to create window class Alacritty-Cava and make it borderless/fullscreen]
#for_window [app_id="alacritty"] border none
#for_window [app_id="rxvt-unicode"] border none

#[attempt at glava again...]
#exec_always sh -c 'sleep 10 && glava --desktop'

#[custom $TERM launch hotkeys]
# Start a terminal (floating)
#    bindsym $mod+Return exec $term && focus_floating
    bindsym $mod+Return exec $term, focus_floating, resize set 1400 900; move position center
# Start a terminal (normal)
#    bindsym $mod+Shift+Return exec $term (see below for st term) 

#[touchpad gestures (WIP)]
# Allow switching between workspaces with left and right swipes
  		bindgesture --exact swipe:3:right workspace prev
  		bindgesture --exact swipe:3:left workspace next
# Browser go back
		bindgesture --exact swipe:2:left Alt_L+left
# Browser go forward
		bindgesture --exact swipe:2:right Alt_L+right

#[SwayOSD - Caps Lock/volume/brightness notification attempt (WIP)
# Sink volume raise optionally with --device
bindsym XF86AudioRaiseVolume exec swayosd --output-volume raise
# Sink volume lower optionally with --device
bindsym XF86AudioLowerVolume exec  swayosd --output-volume lower
# Sink volume toggle mute
bindsym XF86AudioMute exec swayosd --output-volume mute-toggle
# Source volume toggle mute
bindsym XF86AudioMicMute exec swayosd --input-volume mute-toggle
# Capslock
bindsym --release Caps_Lock exec swayosd --caps-lock

# Brightness raise
bindsym XF86MonBrightnessUp exec swayosd --brightness raise
# Brightness lower
bindsym XF86MonBrightnessDown exec swayosd --brightness lower

#[SwayFX customization?]
#>soft corners
corner_radius 12

#>blurrr
#blur enable
#blur_xray disable: this will set floating windows to blur based on the background, not the windows below. You probably want to set this to disable :)
#blur_passes <integer>
#blur_radius <integer>
blur enable
blur_passes 4
blur_radius 5

#>shadow sonic
#shadows enable
#shadows_on_csd enable|disable (Note: The shadow might not fit some windows)
#shadow_blur_radius <integer value 0 - 100>
#shadow_color <hex color with alpha> ex, #0000007F
shadows enable
shadows_on_csd enable
shadow_blur_radius 5
shadow_color #0000007F

#>LayerShell effects (to blur panels / notifications etc):
#layer_effects <layer namespace> <effects>
#The current layer namespaces can be shown with swaymsg -r -t get_outputs | jq '.[0].layer_shell_surfaces | .[] | .namespace'
#Example: layer_effects "waybar" blur enable; shadows enable; corner_radius 6
#Note: If an application uses gtk, its namespace is likely to be "gtk-layer-shell"
#SwayIPC Example: swaymsg "layer_effects 'waybar' 'blur enable; shadows enable; corner_radius 6'"
#Available Effects:
#blur <enable|disable>
#shadows <enable|disable>
#corner_radius <int>

#Dim unfocused windows:
#default_dim_inactive <float value 0.0 - 1.0>
#for_window [CRITERIA_HERE] dim_inactive <float value 0.0 - 1.0>
#dim_inactive_colors.unfocused <hex color> ex, #000000FF
#dim_inactive_colors.urgent <hex color> ex, #900000FF
default_dim_inactive 0.2
#for_window [CRITERIA_HERE] dim_inactive <float value 0.0 - 1.0>
dim_inactive_colors.unfocused #000000FF
dim_inactive_colors.urgent #900000FF

#[nwg - autotiling]
exec_always autotiling

#[Workspace 2 auto layout attempt: https://github.com/swaywm/sway/issues/5070]
#workspace 2
#exec swaymsg "workspace $workspace_programming; exec $neovim; layout tabbed;"
#exec sleep 0.3s && swaymsg "exec $term";
#exec sleep 0.6s && swaymsg "workspace $workspace_programming; split vertical; layout stacking"
#workspace 2
#exec swaymsg "exec $term -e neofetch; split vertical; split horizontal; layout tiling;"
#exec sleep 0.3s && swaymsg "exec $term -e cava; split horizontal; split vertical; layout tiling";
#exec sleep 0.6s && swaymsg "exec $term; split vertical; layout tiling;"
#exec sleep 0.9s && swaymsg "workspace 1 focus"
#      exec swaymsg "exec $term -e neofetch";
#      exec sleep 0.3s; 
#      exec swaymsg "exec $term -e cava; exec move left; exec move down;"
#      exec sleep 0.6s;
#      exec swaymsg "exec $term; move right;"
#      exec sleep 0.9s
#      exec swaymsg "workspace 1 focus"

#[new notification daemon - swaync]
exec swaync

# Toggle control center
bindsym $mod+n exec swaync-client -t -sw

#[hotkey to launch Authy]
bindsym $mod+Shift+a exec authy

#[Attempt at dvd-screensaver-sway floating terminal window size]
exec_always alacritty --class 'dvd' --title 'dvd-screensaver' -e /home/bbrittle/.config/alacritty/scripts/dvd-screensaver.sh

#[Launch st terminal emulator using hotkey mod + shift + enter]
bindsym $mod+Shift+Return exec st
